module NextbillionSDK
  module Models
    type isochrone_compute_params =
      {
        contours_meters: Integer,
        contours_minutes: Integer,
        coordinates: String,
        key: String,
        contours_colors: String,
        denoise: Float,
        departure_time: Integer,
        generalize: Float,
        mode: NextbillionSDK::Models::IsochroneComputeParams::mode,
        polygons: bool
      }
      & NextbillionSDK::Internal::Type::request_parameters

    class IsochroneComputeParams < NextbillionSDK::Internal::Type::BaseModel
      extend NextbillionSDK::Internal::Type::RequestParameters::Converter
      include NextbillionSDK::Internal::Type::RequestParameters

      attr_accessor contours_meters: Integer

      attr_accessor contours_minutes: Integer

      attr_accessor coordinates: String

      attr_accessor key: String

      attr_reader contours_colors: String?

      def contours_colors=: (String) -> String

      attr_reader denoise: Float?

      def denoise=: (Float) -> Float

      attr_reader departure_time: Integer?

      def departure_time=: (Integer) -> Integer

      attr_reader generalize: Float?

      def generalize=: (Float) -> Float

      attr_reader mode: NextbillionSDK::Models::IsochroneComputeParams::mode?

      def mode=: (
        NextbillionSDK::Models::IsochroneComputeParams::mode
      ) -> NextbillionSDK::Models::IsochroneComputeParams::mode

      attr_reader polygons: bool?

      def polygons=: (bool) -> bool

      def initialize: (
        contours_meters: Integer,
        contours_minutes: Integer,
        coordinates: String,
        key: String,
        ?contours_colors: String,
        ?denoise: Float,
        ?departure_time: Integer,
        ?generalize: Float,
        ?mode: NextbillionSDK::Models::IsochroneComputeParams::mode,
        ?polygons: bool,
        ?request_options: NextbillionSDK::request_opts
      ) -> void

      def to_hash: -> {
        contours_meters: Integer,
        contours_minutes: Integer,
        coordinates: String,
        key: String,
        contours_colors: String,
        denoise: Float,
        departure_time: Integer,
        generalize: Float,
        mode: NextbillionSDK::Models::IsochroneComputeParams::mode,
        polygons: bool,
        request_options: NextbillionSDK::RequestOptions
      }

      type mode = :"`car`" | :"`truck`"

      module Mode
        extend NextbillionSDK::Internal::Type::Enum

        CAR: :"`car`"
        TRUCK: :"`truck`"

        def self?.values: -> ::Array[NextbillionSDK::Models::IsochroneComputeParams::mode]
      end
    end
  end
end
