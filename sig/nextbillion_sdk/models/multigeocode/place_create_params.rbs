module NextbillionSDK
  module Models
    module Multigeocode
      type place_create_params =
        {
          key: String,
          place: ::Array[NextbillionSDK::Multigeocode::PlaceCreateParams::Place],
          data_source: NextbillionSDK::Multigeocode::PlaceCreateParams::DataSource,
          force: bool,
          score: Integer
        }
        & NextbillionSDK::Internal::Type::request_parameters

      class PlaceCreateParams < NextbillionSDK::Internal::Type::BaseModel
        extend NextbillionSDK::Internal::Type::RequestParameters::Converter
        include NextbillionSDK::Internal::Type::RequestParameters

        attr_accessor key: String

        attr_accessor place: ::Array[NextbillionSDK::Multigeocode::PlaceCreateParams::Place]

        attr_reader data_source: NextbillionSDK::Multigeocode::PlaceCreateParams::DataSource?

        def data_source=: (
          NextbillionSDK::Multigeocode::PlaceCreateParams::DataSource
        ) -> NextbillionSDK::Multigeocode::PlaceCreateParams::DataSource

        attr_reader force: bool?

        def force=: (bool) -> bool

        attr_reader score: Integer?

        def score=: (Integer) -> Integer

        def initialize: (
          key: String,
          place: ::Array[NextbillionSDK::Multigeocode::PlaceCreateParams::Place],
          ?data_source: NextbillionSDK::Multigeocode::PlaceCreateParams::DataSource,
          ?force: bool,
          ?score: Integer,
          ?request_options: NextbillionSDK::request_opts
        ) -> void

        def to_hash: -> {
          key: String,
          place: ::Array[NextbillionSDK::Multigeocode::PlaceCreateParams::Place],
          data_source: NextbillionSDK::Multigeocode::PlaceCreateParams::DataSource,
          force: bool,
          score: Integer,
          request_options: NextbillionSDK::RequestOptions
        }

        type place =
          {
            geopoint: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Geopoint,
            address: String,
            building: String,
            city: String,
            country: String,
            district: String,
            house: String,
            poi: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Poi,
            postal_code: String,
            state: String,
            street: String,
            sub_district: String
          }

        class Place < NextbillionSDK::Internal::Type::BaseModel
          attr_accessor geopoint: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Geopoint

          attr_reader address: String?

          def address=: (String) -> String

          attr_reader building: String?

          def building=: (String) -> String

          attr_reader city: String?

          def city=: (String) -> String

          attr_reader country: String?

          def country=: (String) -> String

          attr_reader district: String?

          def district=: (String) -> String

          attr_reader house: String?

          def house=: (String) -> String

          attr_reader poi: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Poi?

          def poi=: (
            NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Poi
          ) -> NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Poi

          attr_reader postal_code: String?

          def postal_code=: (String) -> String

          attr_reader state: String?

          def state=: (String) -> String

          attr_reader street: String?

          def street=: (String) -> String

          attr_reader sub_district: String?

          def sub_district=: (String) -> String

          def initialize: (
            geopoint: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Geopoint,
            ?address: String,
            ?building: String,
            ?city: String,
            ?country: String,
            ?district: String,
            ?house: String,
            ?poi: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Poi,
            ?postal_code: String,
            ?state: String,
            ?street: String,
            ?sub_district: String
          ) -> void

          def to_hash: -> {
            geopoint: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Geopoint,
            address: String,
            building: String,
            city: String,
            country: String,
            district: String,
            house: String,
            poi: NextbillionSDK::Multigeocode::PlaceCreateParams::Place::Poi,
            postal_code: String,
            state: String,
            street: String,
            sub_district: String
          }

          type geopoint = { lat: Float, lng: Float }

          class Geopoint < NextbillionSDK::Internal::Type::BaseModel
            attr_reader lat: Float?

            def lat=: (Float) -> Float

            attr_reader lng: Float?

            def lng=: (Float) -> Float

            def initialize: (?lat: Float, ?lng: Float) -> void

            def to_hash: -> { lat: Float, lng: Float }
          end

          type poi = { title: String }

          class Poi < NextbillionSDK::Internal::Type::BaseModel
            attr_reader title: String?

            def title=: (String) -> String

            def initialize: (?title: String) -> void

            def to_hash: -> { title: String }
          end
        end

        type data_source =
          {
            ref_id: String,
            source: String,
            status: NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status
          }

        class DataSource < NextbillionSDK::Internal::Type::BaseModel
          attr_reader ref_id: String?

          def ref_id=: (String) -> String

          attr_reader source: String?

          def source=: (String) -> String

          attr_reader status: NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status?

          def status=: (
            NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status
          ) -> NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status

          def initialize: (
            ?ref_id: String,
            ?source: String,
            ?status: NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status
          ) -> void

          def to_hash: -> {
            ref_id: String,
            source: String,
            status: NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status
          }

          type status = :enable | :disable

          module Status
            extend NextbillionSDK::Internal::Type::Enum

            ENABLE: :enable
            DISABLE: :disable

            def self?.values: -> ::Array[NextbillionSDK::Models::Multigeocode::PlaceCreateParams::DataSource::status]
          end
        end
      end
    end
  end
end
