module NextbillionSDK
  module Models
    module Skynet
      type asset_track_params =
        {
          key: String,
          device_id: String,
          locations: NextbillionSDK::Skynet::AssetTrackParams::Locations,
          cluster: NextbillionSDK::Models::Skynet::AssetTrackParams::cluster
        }
        & NextbillionSDK::Internal::Type::request_parameters

      class AssetTrackParams < NextbillionSDK::Internal::Type::BaseModel
        extend NextbillionSDK::Internal::Type::RequestParameters::Converter
        include NextbillionSDK::Internal::Type::RequestParameters

        attr_accessor key: String

        attr_accessor device_id: String

        attr_accessor locations: NextbillionSDK::Skynet::AssetTrackParams::Locations

        attr_reader cluster: NextbillionSDK::Models::Skynet::AssetTrackParams::cluster?

        def cluster=: (
          NextbillionSDK::Models::Skynet::AssetTrackParams::cluster
        ) -> NextbillionSDK::Models::Skynet::AssetTrackParams::cluster

        def initialize: (
          key: String,
          device_id: String,
          locations: NextbillionSDK::Skynet::AssetTrackParams::Locations,
          ?cluster: NextbillionSDK::Models::Skynet::AssetTrackParams::cluster,
          ?request_options: NextbillionSDK::request_opts
        ) -> void

        def to_hash: -> {
          key: String,
          device_id: String,
          locations: NextbillionSDK::Skynet::AssetTrackParams::Locations,
          cluster: NextbillionSDK::Models::Skynet::AssetTrackParams::cluster,
          request_options: NextbillionSDK::RequestOptions
        }

        type locations =
          {
            location: NextbillionSDK::Skynet::AssetTrackParams::Locations::Location,
            timestamp: Integer,
            accuracy: Float,
            altitude: Float,
            battery_level: Integer,
            bearing: Float,
            meta_data: top,
            speed: Float,
            tracking_mode: String
          }

        class Locations < NextbillionSDK::Internal::Type::BaseModel
          attr_accessor location: NextbillionSDK::Skynet::AssetTrackParams::Locations::Location

          attr_accessor timestamp: Integer

          attr_reader accuracy: Float?

          def accuracy=: (Float) -> Float

          attr_reader altitude: Float?

          def altitude=: (Float) -> Float

          attr_reader battery_level: Integer?

          def battery_level=: (Integer) -> Integer

          attr_reader bearing: Float?

          def bearing=: (Float) -> Float

          attr_reader meta_data: top?

          def meta_data=: (top) -> top

          attr_reader speed: Float?

          def speed=: (Float) -> Float

          attr_reader tracking_mode: String?

          def tracking_mode=: (String) -> String

          def initialize: (
            location: NextbillionSDK::Skynet::AssetTrackParams::Locations::Location,
            timestamp: Integer,
            ?accuracy: Float,
            ?altitude: Float,
            ?battery_level: Integer,
            ?bearing: Float,
            ?meta_data: top,
            ?speed: Float,
            ?tracking_mode: String
          ) -> void

          def to_hash: -> {
            location: NextbillionSDK::Skynet::AssetTrackParams::Locations::Location,
            timestamp: Integer,
            accuracy: Float,
            altitude: Float,
            battery_level: Integer,
            bearing: Float,
            meta_data: top,
            speed: Float,
            tracking_mode: String
          }

          type location = { lat: Float, lon: Float }

          class Location < NextbillionSDK::Internal::Type::BaseModel
            attr_accessor lat: Float

            attr_accessor lon: Float

            def initialize: (lat: Float, lon: Float) -> void

            def to_hash: -> { lat: Float, lon: Float }
          end
        end

        type cluster = :america

        module Cluster
          extend NextbillionSDK::Internal::Type::Enum

          AMERICA: :america

          def self?.values: -> ::Array[NextbillionSDK::Models::Skynet::AssetTrackParams::cluster]
        end
      end
    end
  end
end
