module NextbillionSDK
  module Models
    type batch_retrieve_response =
      {
        msg: String,
        responses: ::Array[NextbillionSDK::Models::BatchRetrieveResponse::Response],
        status: String,
        track_id: String
      }

    class BatchRetrieveResponse < NextbillionSDK::Internal::Type::BaseModel
      attr_reader msg: String?

      def msg=: (String) -> String

      attr_reader responses: ::Array[NextbillionSDK::Models::BatchRetrieveResponse::Response]?

      def responses=: (
        ::Array[NextbillionSDK::Models::BatchRetrieveResponse::Response]
      ) -> ::Array[NextbillionSDK::Models::BatchRetrieveResponse::Response]

      attr_reader status: String?

      def status=: (String) -> String

      attr_reader track_id: String?

      def track_id=: (String) -> String

      def initialize: (
        ?msg: String,
        ?responses: ::Array[NextbillionSDK::Models::BatchRetrieveResponse::Response],
        ?status: String,
        ?track_id: String
      ) -> void

      def to_hash: -> {
        msg: String,
        responses: ::Array[NextbillionSDK::Models::BatchRetrieveResponse::Response],
        status: String,
        track_id: String
      }

      type response = { response: top, status_code: Integer }

      class Response < NextbillionSDK::Internal::Type::BaseModel
        attr_reader response: top?

        def response=: (top) -> top

        attr_reader status_code: Integer?

        def status_code=: (Integer) -> Integer

        def initialize: (?response: top, ?status_code: Integer) -> void

        def to_hash: -> { response: top, status_code: Integer }
      end
    end
  end
end
