module NextbillionSDK
  module Models
    type restriction_list_response =
      {
        data: ::Array[NextbillionSDK::RichGroupResponse],
        meta: NextbillionSDK::Models::RestrictionListResponse::Meta
      }

    class RestrictionListResponse < NextbillionSDK::Internal::Type::BaseModel
      attr_reader data: ::Array[NextbillionSDK::RichGroupResponse]?

      def data=: (
        ::Array[NextbillionSDK::RichGroupResponse]
      ) -> ::Array[NextbillionSDK::RichGroupResponse]

      attr_reader meta: NextbillionSDK::Models::RestrictionListResponse::Meta?

      def meta=: (
        NextbillionSDK::Models::RestrictionListResponse::Meta
      ) -> NextbillionSDK::Models::RestrictionListResponse::Meta

      def initialize: (
        ?data: ::Array[NextbillionSDK::RichGroupResponse],
        ?meta: NextbillionSDK::Models::RestrictionListResponse::Meta
      ) -> void

      def to_hash: -> {
        data: ::Array[NextbillionSDK::RichGroupResponse],
        meta: NextbillionSDK::Models::RestrictionListResponse::Meta
      }

      type meta = { limit: Integer, offset: Integer, total: Integer }

      class Meta < NextbillionSDK::Internal::Type::BaseModel
        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_reader offset: Integer?

        def offset=: (Integer) -> Integer

        attr_reader total: Integer?

        def total=: (Integer) -> Integer

        def initialize: (
          ?limit: Integer,
          ?offset: Integer,
          ?total: Integer
        ) -> void

        def to_hash: -> { limit: Integer, offset: Integer, total: Integer }
      end
    end
  end
end
