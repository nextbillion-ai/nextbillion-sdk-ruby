module NextbillionSDK
  module Models
    type geocode_batch_create_params =
      {
        key: String,
        body: ::Array[NextbillionSDK::GeocodeBatchCreateParams::Body]
      }
      & NextbillionSDK::Internal::Type::request_parameters

    class GeocodeBatchCreateParams < NextbillionSDK::Internal::Type::BaseModel
      extend NextbillionSDK::Internal::Type::RequestParameters::Converter
      include NextbillionSDK::Internal::Type::RequestParameters

      attr_accessor key: String

      attr_accessor body: ::Array[NextbillionSDK::GeocodeBatchCreateParams::Body]

      def initialize: (
        key: String,
        body: ::Array[NextbillionSDK::GeocodeBatchCreateParams::Body],
        ?request_options: NextbillionSDK::request_opts
      ) -> void

      def to_hash: -> {
        key: String,
        body: ::Array[NextbillionSDK::GeocodeBatchCreateParams::Body],
        request_options: NextbillionSDK::RequestOptions
      }

      type body =
        { q: String, at: String, in_: String, lang: String, limit: Integer }

      class Body < NextbillionSDK::Internal::Type::BaseModel
        attr_accessor q: String

        attr_reader at: String?

        def at=: (String) -> String

        attr_reader in_: String?

        def in_=: (String) -> String

        attr_reader lang: String?

        def lang=: (String) -> String

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        def initialize: (
          q: String,
          ?at: String,
          ?in_: String,
          ?lang: String,
          ?limit: Integer
        ) -> void

        def to_hash: -> {
          q: String,
          at: String,
          in_: String,
          lang: String,
          limit: Integer
        }
      end
    end
  end
end
