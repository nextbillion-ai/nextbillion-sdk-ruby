module NextbillionSDK
  module Models
    type direction_compute_route_response =
      {
        msg: String,
        route: NextbillionSDK::Models::DirectionComputeRouteResponse::Route,
        status: String
      }

    class DirectionComputeRouteResponse < NextbillionSDK::Internal::Type::BaseModel
      attr_reader msg: String?

      def msg=: (String) -> String

      attr_reader route: NextbillionSDK::Models::DirectionComputeRouteResponse::Route?

      def route=: (
        NextbillionSDK::Models::DirectionComputeRouteResponse::Route
      ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route

      attr_reader status: String?

      def status=: (String) -> String

      def initialize: (
        ?msg: String,
        ?route: NextbillionSDK::Models::DirectionComputeRouteResponse::Route,
        ?status: String
      ) -> void

      def to_hash: -> {
        msg: String,
        route: NextbillionSDK::Models::DirectionComputeRouteResponse::Route,
        status: String
      }

      type route =
        {
          distance: Float,
          duration: Float,
          end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::EndLocation,
          geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson,
          geometry: String,
          legs: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg],
          start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::StartLocation
        }

      class Route < NextbillionSDK::Internal::Type::BaseModel
        attr_reader distance: Float?

        def distance=: (Float) -> Float

        attr_reader duration: Float?

        def duration=: (Float) -> Float

        attr_reader end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::EndLocation?

        def end_location=: (
          NextbillionSDK::Models::DirectionComputeRouteResponse::Route::EndLocation
        ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::EndLocation

        attr_reader geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson?

        def geojson=: (
          NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson
        ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson

        attr_reader geometry: String?

        def geometry=: (String) -> String

        attr_reader legs: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg]?

        def legs=: (
          ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg]
        ) -> ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg]

        attr_reader start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::StartLocation?

        def start_location=: (
          NextbillionSDK::Models::DirectionComputeRouteResponse::Route::StartLocation
        ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::StartLocation

        def initialize: (
          ?distance: Float,
          ?duration: Float,
          ?end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::EndLocation,
          ?geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson,
          ?geometry: String,
          ?legs: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg],
          ?start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::StartLocation
        ) -> void

        def to_hash: -> {
          distance: Float,
          duration: Float,
          end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::EndLocation,
          geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson,
          geometry: String,
          legs: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg],
          start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::StartLocation
        }

        type end_location = { latitude: Float, longitude: Float }

        class EndLocation < NextbillionSDK::Internal::Type::BaseModel
          attr_reader latitude: Float?

          def latitude=: (Float) -> Float

          attr_reader longitude: Float?

          def longitude=: (Float) -> Float

          def initialize: (?latitude: Float, ?longitude: Float) -> void

          def to_hash: -> { latitude: Float, longitude: Float }
        end

        type geojson =
          {
            geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson::Geometry,
            properties: String,
            type: String
          }

        class Geojson < NextbillionSDK::Internal::Type::BaseModel
          attr_reader geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson::Geometry?

          def geometry=: (
            NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson::Geometry
          ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson::Geometry

          attr_reader properties: String?

          def properties=: (String) -> String

          attr_reader type: String?

          def type=: (String) -> String

          def initialize: (
            ?geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson::Geometry,
            ?properties: String,
            ?type: String
          ) -> void

          def to_hash: -> {
            geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Geojson::Geometry,
            properties: String,
            type: String
          }

          type geometry = { coordinates: ::Array[Float], type: String }

          class Geometry < NextbillionSDK::Internal::Type::BaseModel
            attr_reader coordinates: ::Array[Float]?

            def coordinates=: (::Array[Float]) -> ::Array[Float]

            attr_reader type: String?

            def type=: (String) -> String

            def initialize: (
              ?coordinates: ::Array[Float],
              ?type: String
            ) -> void

            def to_hash: -> { coordinates: ::Array[Float], type: String }
          end
        end

        type leg =
          {
            distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Distance,
            duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Duration,
            end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::EndLocation,
            start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::StartLocation,
            steps: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step]
          }

        class Leg < NextbillionSDK::Internal::Type::BaseModel
          attr_reader distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Distance?

          def distance=: (
            NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Distance
          ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Distance

          attr_reader duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Duration?

          def duration=: (
            NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Duration
          ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Duration

          attr_reader end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::EndLocation?

          def end_location=: (
            NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::EndLocation
          ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::EndLocation

          attr_reader start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::StartLocation?

          def start_location=: (
            NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::StartLocation
          ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::StartLocation

          attr_reader steps: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step]?

          def steps=: (
            ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step]
          ) -> ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step]

          def initialize: (
            ?distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Distance,
            ?duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Duration,
            ?end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::EndLocation,
            ?start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::StartLocation,
            ?steps: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step]
          ) -> void

          def to_hash: -> {
            distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Distance,
            duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Duration,
            end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::EndLocation,
            start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::StartLocation,
            steps: ::Array[NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step]
          }

          type distance = { value: Float }

          class Distance < NextbillionSDK::Internal::Type::BaseModel
            attr_reader value: Float?

            def value=: (Float) -> Float

            def initialize: (?value: Float) -> void

            def to_hash: -> { value: Float }
          end

          type duration = { value: Float }

          class Duration < NextbillionSDK::Internal::Type::BaseModel
            attr_reader value: Float?

            def value=: (Float) -> Float

            def initialize: (?value: Float) -> void

            def to_hash: -> { value: Float }
          end

          type end_location = { latitude: Float, longitude: Float }

          class EndLocation < NextbillionSDK::Internal::Type::BaseModel
            attr_reader latitude: Float?

            def latitude=: (Float) -> Float

            attr_reader longitude: Float?

            def longitude=: (Float) -> Float

            def initialize: (?latitude: Float, ?longitude: Float) -> void

            def to_hash: -> { latitude: Float, longitude: Float }
          end

          type start_location = { latitude: Float, longitude: Float }

          class StartLocation < NextbillionSDK::Internal::Type::BaseModel
            attr_reader latitude: Float?

            def latitude=: (Float) -> Float

            attr_reader longitude: Float?

            def longitude=: (Float) -> Float

            def initialize: (?latitude: Float, ?longitude: Float) -> void

            def to_hash: -> { latitude: Float, longitude: Float }
          end

          type step =
            {
              distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Distance,
              duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Duration,
              end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::EndLocation,
              geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson,
              geometry: String,
              maneuver: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver,
              start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::StartLocation
            }

          class Step < NextbillionSDK::Internal::Type::BaseModel
            attr_reader distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Distance?

            def distance=: (
              NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Distance
            ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Distance

            attr_reader duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Duration?

            def duration=: (
              NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Duration
            ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Duration

            attr_reader end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::EndLocation?

            def end_location=: (
              NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::EndLocation
            ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::EndLocation

            attr_reader geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson?

            def geojson=: (
              NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson
            ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson

            attr_reader geometry: String?

            def geometry=: (String) -> String

            attr_reader maneuver: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver?

            def maneuver=: (
              NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver
            ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver

            attr_reader start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::StartLocation?

            def start_location=: (
              NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::StartLocation
            ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::StartLocation

            def initialize: (
              ?distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Distance,
              ?duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Duration,
              ?end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::EndLocation,
              ?geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson,
              ?geometry: String,
              ?maneuver: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver,
              ?start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::StartLocation
            ) -> void

            def to_hash: -> {
              distance: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Distance,
              duration: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Duration,
              end_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::EndLocation,
              geojson: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson,
              geometry: String,
              maneuver: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver,
              start_location: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::StartLocation
            }

            type distance = { value: Float }

            class Distance < NextbillionSDK::Internal::Type::BaseModel
              attr_reader value: Float?

              def value=: (Float) -> Float

              def initialize: (?value: Float) -> void

              def to_hash: -> { value: Float }
            end

            type duration = { value: Float }

            class Duration < NextbillionSDK::Internal::Type::BaseModel
              attr_reader value: Float?

              def value=: (Float) -> Float

              def initialize: (?value: Float) -> void

              def to_hash: -> { value: Float }
            end

            type end_location = { latitude: Float, longitude: Float }

            class EndLocation < NextbillionSDK::Internal::Type::BaseModel
              attr_reader latitude: Float?

              def latitude=: (Float) -> Float

              attr_reader longitude: Float?

              def longitude=: (Float) -> Float

              def initialize: (?latitude: Float, ?longitude: Float) -> void

              def to_hash: -> { latitude: Float, longitude: Float }
            end

            type geojson =
              {
                geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson::Geometry,
                properties: String,
                type: String
              }

            class Geojson < NextbillionSDK::Internal::Type::BaseModel
              attr_reader geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson::Geometry?

              def geometry=: (
                NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson::Geometry
              ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson::Geometry

              attr_reader properties: String?

              def properties=: (String) -> String

              attr_reader type: String?

              def type=: (String) -> String

              def initialize: (
                ?geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson::Geometry,
                ?properties: String,
                ?type: String
              ) -> void

              def to_hash: -> {
                geometry: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Geojson::Geometry,
                properties: String,
                type: String
              }

              type geometry = { coordinates: ::Array[Float], type: String }

              class Geometry < NextbillionSDK::Internal::Type::BaseModel
                attr_reader coordinates: ::Array[Float]?

                def coordinates=: (::Array[Float]) -> ::Array[Float]

                attr_reader type: String?

                def type=: (String) -> String

                def initialize: (
                  ?coordinates: ::Array[Float],
                  ?type: String
                ) -> void

                def to_hash: -> { coordinates: ::Array[Float], type: String }
              end
            end

            type maneuver =
              {
                bearing_after: Integer,
                bearing_before: Integer,
                coordinate: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver::Coordinate,
                maneuver_type: String,
                modifier: String
              }

            class Maneuver < NextbillionSDK::Internal::Type::BaseModel
              attr_reader bearing_after: Integer?

              def bearing_after=: (Integer) -> Integer

              attr_reader bearing_before: Integer?

              def bearing_before=: (Integer) -> Integer

              attr_reader coordinate: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver::Coordinate?

              def coordinate=: (
                NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver::Coordinate
              ) -> NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver::Coordinate

              attr_reader maneuver_type: String?

              def maneuver_type=: (String) -> String

              attr_reader modifier: String?

              def modifier=: (String) -> String

              def initialize: (
                ?bearing_after: Integer,
                ?bearing_before: Integer,
                ?coordinate: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver::Coordinate,
                ?maneuver_type: String,
                ?modifier: String
              ) -> void

              def to_hash: -> {
                bearing_after: Integer,
                bearing_before: Integer,
                coordinate: NextbillionSDK::Models::DirectionComputeRouteResponse::Route::Leg::Step::Maneuver::Coordinate,
                maneuver_type: String,
                modifier: String
              }

              type coordinate = { latitude: Float, longitude: Float }

              class Coordinate < NextbillionSDK::Internal::Type::BaseModel
                attr_reader latitude: Float?

                def latitude=: (Float) -> Float

                attr_reader longitude: Float?

                def longitude=: (Float) -> Float

                def initialize: (?latitude: Float, ?longitude: Float) -> void

                def to_hash: -> { latitude: Float, longitude: Float }
              end
            end

            type start_location = { latitude: Float, longitude: Float }

            class StartLocation < NextbillionSDK::Internal::Type::BaseModel
              attr_reader latitude: Float?

              def latitude=: (Float) -> Float

              attr_reader longitude: Float?

              def longitude=: (Float) -> Float

              def initialize: (?latitude: Float, ?longitude: Float) -> void

              def to_hash: -> { latitude: Float, longitude: Float }
            end
          end
        end

        type start_location = { latitude: Float, longitude: Float }

        class StartLocation < NextbillionSDK::Internal::Type::BaseModel
          attr_reader latitude: Float?

          def latitude=: (Float) -> Float

          attr_reader longitude: Float?

          def longitude=: (Float) -> Float

          def initialize: (?latitude: Float, ?longitude: Float) -> void

          def to_hash: -> { latitude: Float, longitude: Float }
        end
      end
    end
  end
end
