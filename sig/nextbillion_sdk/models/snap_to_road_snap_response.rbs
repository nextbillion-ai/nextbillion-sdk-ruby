module NextbillionSDK
  module Models
    type snap_to_road_snap_response =
      {
        distance: Integer,
        geojson: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson,
        geometry: ::Array[String],
        msg: String,
        road_info: NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo,
        snapped_points: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint],
        status: String
      }

    class SnapToRoadSnapResponse < NextbillionSDK::Internal::Type::BaseModel
      attr_reader distance: Integer?

      def distance=: (Integer) -> Integer

      attr_reader geojson: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson?

      def geojson=: (
        NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson
      ) -> NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson

      attr_reader geometry: ::Array[String]?

      def geometry=: (::Array[String]) -> ::Array[String]

      attr_reader msg: String?

      def msg=: (String) -> String

      attr_reader road_info: NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo?

      def road_info=: (
        NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo
      ) -> NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo

      attr_reader snapped_points: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint]?

      def snapped_points=: (
        ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint]
      ) -> ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint]

      attr_reader status: String?

      def status=: (String) -> String

      def initialize: (
        ?distance: Integer,
        ?geojson: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson,
        ?geometry: ::Array[String],
        ?msg: String,
        ?road_info: NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo,
        ?snapped_points: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint],
        ?status: String
      ) -> void

      def to_hash: -> {
        distance: Integer,
        geojson: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson,
        geometry: ::Array[String],
        msg: String,
        road_info: NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo,
        snapped_points: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint],
        status: String
      }

      type geojson =
        {
          geometry: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson::Geometry,
          properties: String,
          type: String
        }

      class Geojson < NextbillionSDK::Internal::Type::BaseModel
        attr_reader geometry: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson::Geometry?

        def geometry=: (
          NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson::Geometry
        ) -> NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson::Geometry

        attr_reader properties: String?

        def properties=: (String) -> String

        attr_reader type: String?

        def type=: (String) -> String

        def initialize: (
          ?geometry: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson::Geometry,
          ?properties: String,
          ?type: String
        ) -> void

        def to_hash: -> {
          geometry: NextbillionSDK::Models::SnapToRoadSnapResponse::Geojson::Geometry,
          properties: String,
          type: String
        }

        type geometry = { coordinates: ::Array[Float], type: String }

        class Geometry < NextbillionSDK::Internal::Type::BaseModel
          attr_reader coordinates: ::Array[Float]?

          def coordinates=: (::Array[Float]) -> ::Array[Float]

          attr_reader type: String?

          def type=: (String) -> String

          def initialize: (?coordinates: ::Array[Float], ?type: String) -> void

          def to_hash: -> { coordinates: ::Array[Float], type: String }
        end
      end

      type road_info =
        {
          max_speed: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo::MaxSpeed]
        }

      class RoadInfo < NextbillionSDK::Internal::Type::BaseModel
        attr_reader max_speed: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo::MaxSpeed]?

        def max_speed=: (
          ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo::MaxSpeed]
        ) -> ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo::MaxSpeed]

        def initialize: (
          ?max_speed: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo::MaxSpeed]
        ) -> void

        def to_hash: -> {
          max_speed: ::Array[NextbillionSDK::Models::SnapToRoadSnapResponse::RoadInfo::MaxSpeed]
        }

        type max_speed = { length: Integer, offset: Integer, value: Float }

        class MaxSpeed < NextbillionSDK::Internal::Type::BaseModel
          attr_reader length: Integer?

          def length=: (Integer) -> Integer

          attr_reader offset: Integer?

          def offset=: (Integer) -> Integer

          attr_reader value: Float?

          def value=: (Float) -> Float

          def initialize: (
            ?length: Integer,
            ?offset: Integer,
            ?value: Float
          ) -> void

          def to_hash: -> { length: Integer, offset: Integer, value: Float }
        end
      end

      type snapped_point =
        {
          bearing: Float,
          distance: Float,
          location: NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint::Location,
          name: String,
          original_index: Integer
        }

      class SnappedPoint < NextbillionSDK::Internal::Type::BaseModel
        attr_accessor bearing: Float

        attr_accessor distance: Float

        attr_accessor location: NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint::Location

        attr_accessor name: String

        attr_accessor original_index: Integer

        def initialize: (
          bearing: Float,
          distance: Float,
          location: NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint::Location,
          name: String,
          original_index: Integer
        ) -> void

        def to_hash: -> {
          bearing: Float,
          distance: Float,
          location: NextbillionSDK::Models::SnapToRoadSnapResponse::SnappedPoint::Location,
          name: String,
          original_index: Integer
        }

        type location = { latitude: Float, longitude: Float }

        class Location < NextbillionSDK::Internal::Type::BaseModel
          attr_accessor latitude: Float

          attr_accessor longitude: Float

          def initialize: (latitude: Float, longitude: Float) -> void

          def to_hash: -> { latitude: Float, longitude: Float }
        end
      end
    end
  end
end
