module NextbillionSDK
  module Models
    module Fleetify
      class RouteStepGeofenceConfig = Routes::RouteStepGeofenceConfig

      module Routes
        type route_step_geofence_config =
          {
            radius: Float,
            type: NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_
          }

        class RouteStepGeofenceConfig < NextbillionSDK::Internal::Type::BaseModel
          attr_reader radius: Float?

          def radius=: (Float) -> Float

          attr_reader type: NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_?

          def type=: (
            NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_
          ) -> NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_

          def initialize: (
            ?radius: Float,
            ?type: NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_
          ) -> void

          def to_hash: -> {
            radius: Float,
            type: NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_
          }

          type type_ = :circle

          module Type
            extend NextbillionSDK::Internal::Type::Enum

            CIRCLE: :circle

            def self?.values: -> ::Array[NextbillionSDK::Models::Fleetify::Routes::RouteStepGeofenceConfig::type_]
          end
        end
      end
    end
  end
end
