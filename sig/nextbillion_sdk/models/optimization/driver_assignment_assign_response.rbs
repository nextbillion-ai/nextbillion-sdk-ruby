module NextbillionSDK
  module Models
    module Optimization
      type driver_assignment_assign_response =
        {
          message: String,
          result: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result,
          status: Integer
        }

      class DriverAssignmentAssignResponse < NextbillionSDK::Internal::Type::BaseModel
        attr_reader message: String?

        def message=: (String) -> String

        attr_reader result: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result?

        def result=: (
          NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result
        ) -> NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result

        attr_reader status: Integer?

        def status=: (Integer) -> Integer

        def initialize: (
          ?message: String,
          ?result: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result,
          ?status: Integer
        ) -> void

        def to_hash: -> {
          message: String,
          result: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result,
          status: Integer
        }

        type result =
          {
            alternate_assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment],
            available_vehicles: ::Array[String],
            trips: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip],
            unassigned_orders: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::UnassignedOrder]
          }

        class Result < NextbillionSDK::Internal::Type::BaseModel
          attr_reader alternate_assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment]?

          def alternate_assignments=: (
            ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment]
          ) -> ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment]

          attr_reader available_vehicles: ::Array[String]?

          def available_vehicles=: (::Array[String]) -> ::Array[String]

          attr_reader trips: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip]?

          def trips=: (
            ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip]
          ) -> ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip]

          attr_reader unassigned_orders: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::UnassignedOrder]?

          def unassigned_orders=: (
            ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::UnassignedOrder]
          ) -> ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::UnassignedOrder]

          def initialize: (
            ?alternate_assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment],
            ?available_vehicles: ::Array[String],
            ?trips: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip],
            ?unassigned_orders: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::UnassignedOrder]
          ) -> void

          def to_hash: -> {
            alternate_assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment],
            available_vehicles: ::Array[String],
            trips: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip],
            unassigned_orders: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::UnassignedOrder]
          }

          type alternate_assignment =
            {
              assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment::Assignment],
              order_id: String
            }

          class AlternateAssignment < NextbillionSDK::Internal::Type::BaseModel
            attr_reader assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment::Assignment]?

            def assignments=: (
              ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment::Assignment]
            ) -> ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment::Assignment]

            attr_reader order_id: String?

            def order_id=: (String) -> String

            def initialize: (
              ?assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment::Assignment],
              ?order_id: String
            ) -> void

            def to_hash: -> {
              assignments: ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::AlternateAssignment::Assignment],
              order_id: String
            }

            type assignment = { pickup_eta: Integer, vehicle_id: String }

            class Assignment < NextbillionSDK::Internal::Type::BaseModel
              attr_reader pickup_eta: Integer?

              def pickup_eta=: (Integer) -> Integer

              attr_reader vehicle_id: String?

              def vehicle_id=: (String) -> String

              def initialize: (
                ?pickup_eta: Integer,
                ?vehicle_id: String
              ) -> void

              def to_hash: -> { pickup_eta: Integer, vehicle_id: String }
            end
          end

          type trip =
            {
              trip_id: String,
              vehicle: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle
            }

          class Trip < NextbillionSDK::Internal::Type::BaseModel
            attr_reader trip_id: String?

            def trip_id=: (String) -> String

            attr_reader vehicle: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle?

            def vehicle=: (
              NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle
            ) -> NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle

            def initialize: (
              ?trip_id: String,
              ?vehicle: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle
            ) -> void

            def to_hash: -> {
              trip_id: String,
              vehicle: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle
            }

            type vehicle =
              {
                id: String,
                steps: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps,
                vehicle_current_location: NextbillionSDK::Optimization::Location
              }

            class Vehicle < NextbillionSDK::Internal::Type::BaseModel
              attr_reader id: String?

              def id=: (String) -> String

              attr_reader steps: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps?

              def steps=: (
                NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps
              ) -> NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps

              attr_reader vehicle_current_location: NextbillionSDK::Optimization::Location?

              def vehicle_current_location=: (
                NextbillionSDK::Optimization::Location
              ) -> NextbillionSDK::Optimization::Location

              def initialize: (
                ?id: String,
                ?steps: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps,
                ?vehicle_current_location: NextbillionSDK::Optimization::Location
              ) -> void

              def to_hash: -> {
                id: String,
                steps: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps,
                vehicle_current_location: NextbillionSDK::Optimization::Location
              }

              type steps =
                {
                  distance: Integer,
                  eta: Integer,
                  location: NextbillionSDK::Optimization::Location,
                  order_id: String,
                  type: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_
                }

              class Steps < NextbillionSDK::Internal::Type::BaseModel
                attr_reader distance: Integer?

                def distance=: (Integer) -> Integer

                attr_reader eta: Integer?

                def eta=: (Integer) -> Integer

                attr_reader location: NextbillionSDK::Optimization::Location?

                def location=: (
                  NextbillionSDK::Optimization::Location
                ) -> NextbillionSDK::Optimization::Location

                attr_reader order_id: String?

                def order_id=: (String) -> String

                attr_reader type: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_?

                def type=: (
                  NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_
                ) -> NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_

                def initialize: (
                  ?distance: Integer,
                  ?eta: Integer,
                  ?location: NextbillionSDK::Optimization::Location,
                  ?order_id: String,
                  ?type: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_
                ) -> void

                def to_hash: -> {
                  distance: Integer,
                  eta: Integer,
                  location: NextbillionSDK::Optimization::Location,
                  order_id: String,
                  type: NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_
                }

                type type_ = :pickup | :dropoff | :ongoing

                module Type
                  extend NextbillionSDK::Internal::Type::Enum

                  PICKUP: :pickup
                  DROPOFF: :dropoff
                  ONGOING: :ongoing

                  def self?.values: -> ::Array[NextbillionSDK::Models::Optimization::DriverAssignmentAssignResponse::Result::Trip::Vehicle::Steps::type_]
                end
              end
            end
          end

          type unassigned_order =
            { order_id: String, unassigned_reason: String }

          class UnassignedOrder < NextbillionSDK::Internal::Type::BaseModel
            attr_reader order_id: String?

            def order_id=: (String) -> String

            attr_reader unassigned_reason: String?

            def unassigned_reason=: (String) -> String

            def initialize: (
              ?order_id: String,
              ?unassigned_reason: String
            ) -> void

            def to_hash: -> { order_id: String, unassigned_reason: String }
          end
        end
      end
    end
  end
end
