module Nextbillionai
  module Models
    type navigation_retrieve_route_params =
      {
        key: String,
        altcount: Integer,
        alternatives: bool,
        approaches: Nextbillionai::Models::NavigationRetrieveRouteParams::approaches,
        avoid: Nextbillionai::Models::NavigationRetrieveRouteParams::avoid,
        bearings: String,
        destination: String,
        geometry: Nextbillionai::Models::NavigationRetrieveRouteParams::geometry,
        lang: String,
        mode: Nextbillionai::Models::NavigationRetrieveRouteParams::mode,
        origin: String,
        original_shape: String,
        original_shape_type: Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type,
        overview: Nextbillionai::Models::NavigationRetrieveRouteParams::overview,
        waypoints: String
      }
      & Nextbillionai::Internal::Type::request_parameters

    class NavigationRetrieveRouteParams < Nextbillionai::Internal::Type::BaseModel
      extend Nextbillionai::Internal::Type::RequestParameters::Converter
      include Nextbillionai::Internal::Type::RequestParameters

      attr_accessor key: String

      attr_reader altcount: Integer?

      def altcount=: (Integer) -> Integer

      attr_reader alternatives: bool?

      def alternatives=: (bool) -> bool

      attr_reader approaches: Nextbillionai::Models::NavigationRetrieveRouteParams::approaches?

      def approaches=: (
        Nextbillionai::Models::NavigationRetrieveRouteParams::approaches
      ) -> Nextbillionai::Models::NavigationRetrieveRouteParams::approaches

      attr_reader avoid: Nextbillionai::Models::NavigationRetrieveRouteParams::avoid?

      def avoid=: (
        Nextbillionai::Models::NavigationRetrieveRouteParams::avoid
      ) -> Nextbillionai::Models::NavigationRetrieveRouteParams::avoid

      attr_reader bearings: String?

      def bearings=: (String) -> String

      attr_reader destination: String?

      def destination=: (String) -> String

      attr_reader geometry: Nextbillionai::Models::NavigationRetrieveRouteParams::geometry?

      def geometry=: (
        Nextbillionai::Models::NavigationRetrieveRouteParams::geometry
      ) -> Nextbillionai::Models::NavigationRetrieveRouteParams::geometry

      attr_reader lang: String?

      def lang=: (String) -> String

      attr_reader mode: Nextbillionai::Models::NavigationRetrieveRouteParams::mode?

      def mode=: (
        Nextbillionai::Models::NavigationRetrieveRouteParams::mode
      ) -> Nextbillionai::Models::NavigationRetrieveRouteParams::mode

      attr_reader origin: String?

      def origin=: (String) -> String

      attr_reader original_shape: String?

      def original_shape=: (String) -> String

      attr_reader original_shape_type: Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type?

      def original_shape_type=: (
        Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type
      ) -> Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type

      attr_reader overview: Nextbillionai::Models::NavigationRetrieveRouteParams::overview?

      def overview=: (
        Nextbillionai::Models::NavigationRetrieveRouteParams::overview
      ) -> Nextbillionai::Models::NavigationRetrieveRouteParams::overview

      attr_reader waypoints: String?

      def waypoints=: (String) -> String

      def initialize: (
        key: String,
        ?altcount: Integer,
        ?alternatives: bool,
        ?approaches: Nextbillionai::Models::NavigationRetrieveRouteParams::approaches,
        ?avoid: Nextbillionai::Models::NavigationRetrieveRouteParams::avoid,
        ?bearings: String,
        ?destination: String,
        ?geometry: Nextbillionai::Models::NavigationRetrieveRouteParams::geometry,
        ?lang: String,
        ?mode: Nextbillionai::Models::NavigationRetrieveRouteParams::mode,
        ?origin: String,
        ?original_shape: String,
        ?original_shape_type: Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type,
        ?overview: Nextbillionai::Models::NavigationRetrieveRouteParams::overview,
        ?waypoints: String,
        ?request_options: Nextbillionai::request_opts
      ) -> void

      def to_hash: -> {
        key: String,
        altcount: Integer,
        alternatives: bool,
        approaches: Nextbillionai::Models::NavigationRetrieveRouteParams::approaches,
        avoid: Nextbillionai::Models::NavigationRetrieveRouteParams::avoid,
        bearings: String,
        destination: String,
        geometry: Nextbillionai::Models::NavigationRetrieveRouteParams::geometry,
        lang: String,
        mode: Nextbillionai::Models::NavigationRetrieveRouteParams::mode,
        origin: String,
        original_shape: String,
        original_shape_type: Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type,
        overview: Nextbillionai::Models::NavigationRetrieveRouteParams::overview,
        waypoints: String,
        request_options: Nextbillionai::RequestOptions
      }

      type approaches = :"`unrestricted`" | :"`curb`"

      module Approaches
        extend Nextbillionai::Internal::Type::Enum

        UNRESTRICTED: :"`unrestricted`"
        CURB: :"`curb`"

        def self?.values: -> ::Array[Nextbillionai::Models::NavigationRetrieveRouteParams::approaches]
      end

      type avoid = :toll | :ferry | :highway | :none

      module Avoid
        extend Nextbillionai::Internal::Type::Enum

        TOLL: :toll
        FERRY: :ferry
        HIGHWAY: :highway
        NONE: :none

        def self?.values: -> ::Array[Nextbillionai::Models::NavigationRetrieveRouteParams::avoid]
      end

      type geometry = :"`polyline`" | :"`polyline6`" | :"`geojson`"

      module Geometry
        extend Nextbillionai::Internal::Type::Enum

        POLYLINE: :"`polyline`"
        POLYLINE6: :"`polyline6`"
        GEOJSON: :"`geojson`"

        def self?.values: -> ::Array[Nextbillionai::Models::NavigationRetrieveRouteParams::geometry]
      end

      type mode = :"`car`" | :"`truck`"

      module Mode
        extend Nextbillionai::Internal::Type::Enum

        CAR: :"`car`"
        TRUCK: :"`truck`"

        def self?.values: -> ::Array[Nextbillionai::Models::NavigationRetrieveRouteParams::mode]
      end

      type original_shape_type = :polyline | :polyline6

      module OriginalShapeType
        extend Nextbillionai::Internal::Type::Enum

        POLYLINE: :polyline
        POLYLINE6: :polyline6

        def self?.values: -> ::Array[Nextbillionai::Models::NavigationRetrieveRouteParams::original_shape_type]
      end

      type overview = :"`full`" | :"`simplified`" | :"`false`"

      module Overview
        extend Nextbillionai::Internal::Type::Enum

        FULL: :"`full`"
        SIMPLIFIED: :"`simplified`"
        FALSE: :"`false`"

        def self?.values: -> ::Array[Nextbillionai::Models::NavigationRetrieveRouteParams::overview]
      end
    end
  end
end
