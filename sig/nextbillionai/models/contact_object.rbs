module Nextbillionai
  module Models
    type contact_object =
      {
        categories: ::Array[Nextbillionai::ContactObject::Category],
        label: String,
        value: String
      }

    class ContactObject < Nextbillionai::Internal::Type::BaseModel
      attr_reader categories: ::Array[Nextbillionai::ContactObject::Category]?

      def categories=: (
        ::Array[Nextbillionai::ContactObject::Category]
      ) -> ::Array[Nextbillionai::ContactObject::Category]

      attr_reader label: String?

      def label=: (String) -> String

      attr_reader value: String?

      def value=: (String) -> String

      def initialize: (
        ?categories: ::Array[Nextbillionai::ContactObject::Category],
        ?label: String,
        ?value: String
      ) -> void

      def to_hash: -> {
        categories: ::Array[Nextbillionai::ContactObject::Category],
        label: String,
        value: String
      }

      type category = { id: String }

      class Category < Nextbillionai::Internal::Type::BaseModel
        attr_reader id: String?

        def id=: (String) -> String

        def initialize: (?id: String) -> void

        def to_hash: -> { id: String }
      end
    end
  end
end
