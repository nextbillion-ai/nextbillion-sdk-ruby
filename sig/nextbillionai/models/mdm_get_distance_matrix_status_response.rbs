module Nextbillionai
  module Models
    type mdm_get_distance_matrix_status_response =
      {
        code: Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code,
        output_addr: String,
        result_link: String,
        status: String
      }

    class MdmGetDistanceMatrixStatusResponse < Nextbillionai::Internal::Type::BaseModel
      attr_reader code: Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code?

      def code=: (
        Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code
      ) -> Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code

      attr_reader output_addr: String?

      def output_addr=: (String) -> String

      attr_reader result_link: String?

      def result_link=: (String) -> String

      attr_reader status: String?

      def status=: (String) -> String

      def initialize: (
        ?code: Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code,
        ?output_addr: String,
        ?result_link: String,
        ?status: String
      ) -> void

      def to_hash: -> {
        code: Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code,
        output_addr: String,
        result_link: String,
        status: String
      }

      type code = :"`Ok`" | :"`Processing`" | :"`Failed`"

      module Code
        extend Nextbillionai::Internal::Type::Enum

        OK: :"`Ok`"
        PROCESSING: :"`Processing`"
        FAILED: :"`Failed`"

        def self?.values: -> ::Array[Nextbillionai::Models::MdmGetDistanceMatrixStatusResponse::code]
      end
    end
  end
end
