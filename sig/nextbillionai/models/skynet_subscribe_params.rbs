module Nextbillionai
  module Models
    type skynet_subscribe_params =
      {
        action: Nextbillionai::Models::SkynetSubscribeParams::action,
        id: String,
        params: Nextbillionai::SkynetSubscribeParams::Params
      }
      & Nextbillionai::Internal::Type::request_parameters

    class SkynetSubscribeParams < Nextbillionai::Internal::Type::BaseModel
      extend Nextbillionai::Internal::Type::RequestParameters::Converter
      include Nextbillionai::Internal::Type::RequestParameters

      attr_accessor action: Nextbillionai::Models::SkynetSubscribeParams::action

      attr_reader id: String?

      def id=: (String) -> String

      attr_reader params: Nextbillionai::SkynetSubscribeParams::Params?

      def params=: (
        Nextbillionai::SkynetSubscribeParams::Params
      ) -> Nextbillionai::SkynetSubscribeParams::Params

      def initialize: (
        action: Nextbillionai::Models::SkynetSubscribeParams::action,
        ?id: String,
        ?params: Nextbillionai::SkynetSubscribeParams::Params,
        ?request_options: Nextbillionai::request_opts
      ) -> void

      def to_hash: -> {
        action: Nextbillionai::Models::SkynetSubscribeParams::action,
        id: String,
        params: Nextbillionai::SkynetSubscribeParams::Params,
        request_options: Nextbillionai::RequestOptions
      }

      type action = :"`TRIP_SUBSCRIBE`" | :"`TRIP_UNSUBSCRIBE`" | :"`HEARTBEAT`"

      module Action
        extend Nextbillionai::Internal::Type::Enum

        TRIP_SUBSCRIBE: :"`TRIP_SUBSCRIBE`"
        TRIP_UNSUBSCRIBE: :"`TRIP_UNSUBSCRIBE`"
        HEARTBEAT: :"`HEARTBEAT`"

        def self?.values: -> ::Array[Nextbillionai::Models::SkynetSubscribeParams::action]
      end

      type params = { id: String }

      class Params < Nextbillionai::Internal::Type::BaseModel
        attr_accessor id: String

        def initialize: (id: String) -> void

        def to_hash: -> { id: String }
      end
    end
  end
end
