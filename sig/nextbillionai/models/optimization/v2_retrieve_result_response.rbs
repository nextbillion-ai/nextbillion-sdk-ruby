module Nextbillionai
  module Models
    module Optimization
      type v2_retrieve_result_response =
        {
          description: String,
          message: String,
          result: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result,
          status: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status
        }

      class V2RetrieveResultResponse < Nextbillionai::Internal::Type::BaseModel
        attr_reader description: String?

        def description=: (String) -> String

        attr_reader message: String?

        def message=: (String) -> String

        attr_reader result: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result?

        def result=: (
          Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result
        ) -> Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result

        attr_reader status: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status?

        def status=: (
          Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status
        ) -> Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status

        def initialize: (
          ?description: String,
          ?message: String,
          ?result: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result,
          ?status: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status
        ) -> void

        def to_hash: -> {
          description: String,
          message: String,
          result: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result,
          status: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status
        }

        type result =
          {
            code: Integer,
            error: String,
            routes: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route],
            routing_profiles: top,
            summary: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Summary,
            unassigned: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Unassigned]
          }

        class Result < Nextbillionai::Internal::Type::BaseModel
          attr_reader code: Integer?

          def code=: (Integer) -> Integer

          attr_reader error: String?

          def error=: (String) -> String

          attr_reader routes: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route]?

          def routes=: (
            ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route]
          ) -> ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route]

          attr_reader routing_profiles: top?

          def routing_profiles=: (top) -> top

          attr_reader summary: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Summary?

          def summary=: (
            Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Summary
          ) -> Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Summary

          attr_reader unassigned: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Unassigned]?

          def unassigned=: (
            ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Unassigned]
          ) -> ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Unassigned]

          def initialize: (
            ?code: Integer,
            ?error: String,
            ?routes: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route],
            ?routing_profiles: top,
            ?summary: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Summary,
            ?unassigned: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Unassigned]
          ) -> void

          def to_hash: -> {
            code: Integer,
            error: String,
            routes: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route],
            routing_profiles: top,
            summary: Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Summary,
            unassigned: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Unassigned]
          }

          type route =
            {
              adopted_capacity: ::Array[Integer],
              cost: Integer,
              delivery: ::Array[Integer],
              description: String,
              distance: Float,
              duration: Integer,
              geometry: String,
              metadata: top,
              pickup: ::Array[Integer],
              priority: Integer,
              profile: String,
              revenue: Integer,
              service: Integer,
              setup: Integer,
              steps: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route::Step],
              vehicle: String,
              vehicle_overtime: Integer,
              waiting_time: Integer
            }

          class Route < Nextbillionai::Internal::Type::BaseModel
            attr_reader adopted_capacity: ::Array[Integer]?

            def adopted_capacity=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader cost: Integer?

            def cost=: (Integer) -> Integer

            attr_reader delivery: ::Array[Integer]?

            def delivery=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader distance: Float?

            def distance=: (Float) -> Float

            attr_reader duration: Integer?

            def duration=: (Integer) -> Integer

            attr_reader geometry: String?

            def geometry=: (String) -> String

            attr_reader metadata: top?

            def metadata=: (top) -> top

            attr_reader pickup: ::Array[Integer]?

            def pickup=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader priority: Integer?

            def priority=: (Integer) -> Integer

            attr_reader profile: String?

            def profile=: (String) -> String

            attr_reader revenue: Integer?

            def revenue=: (Integer) -> Integer

            attr_reader service: Integer?

            def service=: (Integer) -> Integer

            attr_reader setup: Integer?

            def setup=: (Integer) -> Integer

            attr_reader steps: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route::Step]?

            def steps=: (
              ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route::Step]
            ) -> ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route::Step]

            attr_reader vehicle: String?

            def vehicle=: (String) -> String

            attr_reader vehicle_overtime: Integer?

            def vehicle_overtime=: (Integer) -> Integer

            attr_reader waiting_time: Integer?

            def waiting_time=: (Integer) -> Integer

            def initialize: (
              ?adopted_capacity: ::Array[Integer],
              ?cost: Integer,
              ?delivery: ::Array[Integer],
              ?description: String,
              ?distance: Float,
              ?duration: Integer,
              ?geometry: String,
              ?metadata: top,
              ?pickup: ::Array[Integer],
              ?priority: Integer,
              ?profile: String,
              ?revenue: Integer,
              ?service: Integer,
              ?setup: Integer,
              ?steps: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route::Step],
              ?vehicle: String,
              ?vehicle_overtime: Integer,
              ?waiting_time: Integer
            ) -> void

            def to_hash: -> {
              adopted_capacity: ::Array[Integer],
              cost: Integer,
              delivery: ::Array[Integer],
              description: String,
              distance: Float,
              duration: Integer,
              geometry: String,
              metadata: top,
              pickup: ::Array[Integer],
              priority: Integer,
              profile: String,
              revenue: Integer,
              service: Integer,
              setup: Integer,
              steps: ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::Result::Route::Step],
              vehicle: String,
              vehicle_overtime: Integer,
              waiting_time: Integer
            }

            type step =
              {
                id: String,
                arrival: Integer,
                depot: String,
                description: String,
                distance: Integer,
                duration: Integer,
                late_by: String,
                load_: ::Array[Integer],
                location: ::Array[Float],
                location_index: Integer,
                metadata: top,
                projected_location: ::Array[Float],
                run: Integer,
                service: Integer,
                setup: Integer,
                snapped_location: ::Array[Float],
                type: String,
                waiting_time: Integer
              }

            class Step < Nextbillionai::Internal::Type::BaseModel
              attr_reader id: String?

              def id=: (String) -> String

              attr_reader arrival: Integer?

              def arrival=: (Integer) -> Integer

              attr_reader depot: String?

              def depot=: (String) -> String

              attr_reader description: String?

              def description=: (String) -> String

              attr_reader distance: Integer?

              def distance=: (Integer) -> Integer

              attr_reader duration: Integer?

              def duration=: (Integer) -> Integer

              attr_reader late_by: String?

              def late_by=: (String) -> String

              attr_reader load_: ::Array[Integer]?

              def load_=: (::Array[Integer]) -> ::Array[Integer]

              attr_reader location: ::Array[Float]?

              def location=: (::Array[Float]) -> ::Array[Float]

              attr_reader location_index: Integer?

              def location_index=: (Integer) -> Integer

              attr_reader metadata: top?

              def metadata=: (top) -> top

              attr_reader projected_location: ::Array[Float]?

              def projected_location=: (::Array[Float]) -> ::Array[Float]

              attr_reader run: Integer?

              def run=: (Integer) -> Integer

              attr_reader service: Integer?

              def service=: (Integer) -> Integer

              attr_reader setup: Integer?

              def setup=: (Integer) -> Integer

              attr_reader snapped_location: ::Array[Float]?

              def snapped_location=: (::Array[Float]) -> ::Array[Float]

              attr_reader type: String?

              def type=: (String) -> String

              attr_reader waiting_time: Integer?

              def waiting_time=: (Integer) -> Integer

              def initialize: (
                ?id: String,
                ?arrival: Integer,
                ?depot: String,
                ?description: String,
                ?distance: Integer,
                ?duration: Integer,
                ?late_by: String,
                ?load_: ::Array[Integer],
                ?location: ::Array[Float],
                ?location_index: Integer,
                ?metadata: top,
                ?projected_location: ::Array[Float],
                ?run: Integer,
                ?service: Integer,
                ?setup: Integer,
                ?snapped_location: ::Array[Float],
                ?type: String,
                ?waiting_time: Integer
              ) -> void

              def to_hash: -> {
                id: String,
                arrival: Integer,
                depot: String,
                description: String,
                distance: Integer,
                duration: Integer,
                late_by: String,
                load_: ::Array[Integer],
                location: ::Array[Float],
                location_index: Integer,
                metadata: top,
                projected_location: ::Array[Float],
                run: Integer,
                service: Integer,
                setup: Integer,
                snapped_location: ::Array[Float],
                type: String,
                waiting_time: Integer
              }
            end
          end

          type summary =
            {
              cost: Integer,
              delivery: ::Array[Integer],
              distance: Float,
              duration: Integer,
              num_late_visits: Integer,
              pickup: ::Array[Integer],
              priority: Integer,
              revenue: Integer,
              routes: Integer,
              service: Integer,
              setup: Integer,
              total_visit_lateness: Integer,
              unassigned: Integer,
              waiting_time: Integer
            }

          class Summary < Nextbillionai::Internal::Type::BaseModel
            attr_reader cost: Integer?

            def cost=: (Integer) -> Integer

            attr_reader delivery: ::Array[Integer]?

            def delivery=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader distance: Float?

            def distance=: (Float) -> Float

            attr_reader duration: Integer?

            def duration=: (Integer) -> Integer

            attr_reader num_late_visits: Integer?

            def num_late_visits=: (Integer) -> Integer

            attr_reader pickup: ::Array[Integer]?

            def pickup=: (::Array[Integer]) -> ::Array[Integer]

            attr_reader priority: Integer?

            def priority=: (Integer) -> Integer

            attr_reader revenue: Integer?

            def revenue=: (Integer) -> Integer

            attr_reader routes: Integer?

            def routes=: (Integer) -> Integer

            attr_reader service: Integer?

            def service=: (Integer) -> Integer

            attr_reader setup: Integer?

            def setup=: (Integer) -> Integer

            attr_reader total_visit_lateness: Integer?

            def total_visit_lateness=: (Integer) -> Integer

            attr_reader unassigned: Integer?

            def unassigned=: (Integer) -> Integer

            attr_reader waiting_time: Integer?

            def waiting_time=: (Integer) -> Integer

            def initialize: (
              ?cost: Integer,
              ?delivery: ::Array[Integer],
              ?distance: Float,
              ?duration: Integer,
              ?num_late_visits: Integer,
              ?pickup: ::Array[Integer],
              ?priority: Integer,
              ?revenue: Integer,
              ?routes: Integer,
              ?service: Integer,
              ?setup: Integer,
              ?total_visit_lateness: Integer,
              ?unassigned: Integer,
              ?waiting_time: Integer
            ) -> void

            def to_hash: -> {
              cost: Integer,
              delivery: ::Array[Integer],
              distance: Float,
              duration: Integer,
              num_late_visits: Integer,
              pickup: ::Array[Integer],
              priority: Integer,
              revenue: Integer,
              routes: Integer,
              service: Integer,
              setup: Integer,
              total_visit_lateness: Integer,
              unassigned: Integer,
              waiting_time: Integer
            }
          end

          type unassigned =
            {
              id: String,
              location: ::Array[Float],
              outsourcing_cost: Integer,
              reason: String,
              type: String
            }

          class Unassigned < Nextbillionai::Internal::Type::BaseModel
            attr_reader id: String?

            def id=: (String) -> String

            attr_reader location: ::Array[Float]?

            def location=: (::Array[Float]) -> ::Array[Float]

            attr_reader outsourcing_cost: Integer?

            def outsourcing_cost=: (Integer) -> Integer

            attr_reader reason: String?

            def reason=: (String) -> String

            attr_reader type: String?

            def type=: (String) -> String

            def initialize: (
              ?id: String,
              ?location: ::Array[Float],
              ?outsourcing_cost: Integer,
              ?reason: String,
              ?type: String
            ) -> void

            def to_hash: -> {
              id: String,
              location: ::Array[Float],
              outsourcing_cost: Integer,
              reason: String,
              type: String
            }
          end
        end

        type status = :Ok | :Error

        module Status
          extend Nextbillionai::Internal::Type::Enum

          OK: :Ok
          ERROR: :Error

          def self?.values: -> ::Array[Nextbillionai::Models::Optimization::V2RetrieveResultResponse::status]
        end
      end
    end
  end
end
