module Nextbillionai
  module Models
    module Optimization
      type vehicle =
        {
          id: String,
          location: Nextbillionai::Optimization::Location,
          attributes: top,
          priority: Integer,
          remaining_waypoints: ::Array[Nextbillionai::Optimization::Location]
        }

      class Vehicle < Nextbillionai::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor location: Nextbillionai::Optimization::Location

        attr_reader attributes: top?

        def attributes=: (top) -> top

        attr_reader priority: Integer?

        def priority=: (Integer) -> Integer

        attr_reader remaining_waypoints: ::Array[Nextbillionai::Optimization::Location]?

        def remaining_waypoints=: (
          ::Array[Nextbillionai::Optimization::Location]
        ) -> ::Array[Nextbillionai::Optimization::Location]

        def initialize: (
          id: String,
          location: Nextbillionai::Optimization::Location,
          ?attributes: top,
          ?priority: Integer,
          ?remaining_waypoints: ::Array[Nextbillionai::Optimization::Location]
        ) -> void

        def to_hash: -> {
          id: String,
          location: Nextbillionai::Optimization::Location,
          attributes: top,
          priority: Integer,
          remaining_waypoints: ::Array[Nextbillionai::Optimization::Location]
        }
      end
    end
  end
end
