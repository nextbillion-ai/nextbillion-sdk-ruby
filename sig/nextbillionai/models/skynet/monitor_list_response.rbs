module Nextbillionai
  module Models
    module Skynet
      type monitor_list_response =
        {
          data: Nextbillionai::Models::Skynet::MonitorListResponse::Data,
          message: String,
          status: String
        }

      class MonitorListResponse < Nextbillionai::Internal::Type::BaseModel
        attr_reader data: Nextbillionai::Models::Skynet::MonitorListResponse::Data?

        def data=: (
          Nextbillionai::Models::Skynet::MonitorListResponse::Data
        ) -> Nextbillionai::Models::Skynet::MonitorListResponse::Data

        attr_reader message: String?

        def message=: (String) -> String

        attr_reader status: String?

        def status=: (String) -> String

        def initialize: (
          ?data: Nextbillionai::Models::Skynet::MonitorListResponse::Data,
          ?message: String,
          ?status: String
        ) -> void

        def to_hash: -> {
          data: Nextbillionai::Models::Skynet::MonitorListResponse::Data,
          message: String,
          status: String
        }

        type data =
          {
            list: ::Array[Nextbillionai::Skynet::SkynetMonitor],
            page: Nextbillionai::Skynet::Pagination
          }

        class Data < Nextbillionai::Internal::Type::BaseModel
          attr_reader list: ::Array[Nextbillionai::Skynet::SkynetMonitor]?

          def list=: (
            ::Array[Nextbillionai::Skynet::SkynetMonitor]
          ) -> ::Array[Nextbillionai::Skynet::SkynetMonitor]

          attr_reader page: Nextbillionai::Skynet::Pagination?

          def page=: (
            Nextbillionai::Skynet::Pagination
          ) -> Nextbillionai::Skynet::Pagination

          def initialize: (
            ?list: ::Array[Nextbillionai::Skynet::SkynetMonitor],
            ?page: Nextbillionai::Skynet::Pagination
          ) -> void

          def to_hash: -> {
            list: ::Array[Nextbillionai::Skynet::SkynetMonitor],
            page: Nextbillionai::Skynet::Pagination
          }
        end
      end
    end
  end
end
