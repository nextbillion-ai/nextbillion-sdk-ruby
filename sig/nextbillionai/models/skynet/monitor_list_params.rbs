module Nextbillionai
  module Models
    module Skynet
      type monitor_list_params =
        {
          key: String,
          cluster: Nextbillionai::Models::Skynet::MonitorListParams::cluster,
          pn: Integer,
          ps: Integer,
          sort: String,
          tags: String
        }
        & Nextbillionai::Internal::Type::request_parameters

      class MonitorListParams < Nextbillionai::Internal::Type::BaseModel
        extend Nextbillionai::Internal::Type::RequestParameters::Converter
        include Nextbillionai::Internal::Type::RequestParameters

        attr_accessor key: String

        attr_reader cluster: Nextbillionai::Models::Skynet::MonitorListParams::cluster?

        def cluster=: (
          Nextbillionai::Models::Skynet::MonitorListParams::cluster
        ) -> Nextbillionai::Models::Skynet::MonitorListParams::cluster

        attr_reader pn: Integer?

        def pn=: (Integer) -> Integer

        attr_reader ps: Integer?

        def ps=: (Integer) -> Integer

        attr_reader sort: String?

        def sort=: (String) -> String

        attr_reader tags: String?

        def tags=: (String) -> String

        def initialize: (
          key: String,
          ?cluster: Nextbillionai::Models::Skynet::MonitorListParams::cluster,
          ?pn: Integer,
          ?ps: Integer,
          ?sort: String,
          ?tags: String,
          ?request_options: Nextbillionai::request_opts
        ) -> void

        def to_hash: -> {
          key: String,
          cluster: Nextbillionai::Models::Skynet::MonitorListParams::cluster,
          pn: Integer,
          ps: Integer,
          sort: String,
          tags: String,
          request_options: Nextbillionai::RequestOptions
        }

        type cluster = :america

        module Cluster
          extend Nextbillionai::Internal::Type::Enum

          AMERICA: :america

          def self?.values: -> ::Array[Nextbillionai::Models::Skynet::MonitorListParams::cluster]
        end
      end
    end
  end
end
