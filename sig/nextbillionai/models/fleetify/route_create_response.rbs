module Nextbillionai
  module Models
    module Fleetify
      type route_create_response =
        {
          data: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data,
          status: Integer
        }

      class RouteCreateResponse < Nextbillionai::Internal::Type::BaseModel
        attr_reader data: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data?

        def data=: (
          Nextbillionai::Models::Fleetify::RouteCreateResponse::Data
        ) -> Nextbillionai::Models::Fleetify::RouteCreateResponse::Data

        attr_reader status: Integer?

        def status=: (Integer) -> Integer

        def initialize: (
          ?data: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data,
          ?status: Integer
        ) -> void

        def to_hash: -> {
          data: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data,
          status: Integer
        }

        type data =
          {
            id: String,
            created_at: Integer,
            distance: Integer,
            document_snapshot: ::Array[top],
            driver: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data::Driver,
            ro_request_id: String,
            routing: Nextbillionai::Fleetify::RoutingResponse,
            short_id: String,
            steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsResponse],
            total_steps: Integer,
            updated_at: Integer,
            vehicle_id: String
          }

        class Data < Nextbillionai::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_reader created_at: Integer?

          def created_at=: (Integer) -> Integer

          attr_reader distance: Integer?

          def distance=: (Integer) -> Integer

          attr_reader document_snapshot: ::Array[top]?

          def document_snapshot=: (::Array[top]) -> ::Array[top]

          attr_reader driver: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data::Driver?

          def driver=: (
            Nextbillionai::Models::Fleetify::RouteCreateResponse::Data::Driver
          ) -> Nextbillionai::Models::Fleetify::RouteCreateResponse::Data::Driver

          attr_reader ro_request_id: String?

          def ro_request_id=: (String) -> String

          attr_reader routing: Nextbillionai::Fleetify::RoutingResponse?

          def routing=: (
            Nextbillionai::Fleetify::RoutingResponse
          ) -> Nextbillionai::Fleetify::RoutingResponse

          attr_reader short_id: String?

          def short_id=: (String) -> String

          attr_reader steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsResponse]?

          def steps=: (
            ::Array[Nextbillionai::Fleetify::Routes::RouteStepsResponse]
          ) -> ::Array[Nextbillionai::Fleetify::Routes::RouteStepsResponse]

          attr_reader total_steps: Integer?

          def total_steps=: (Integer) -> Integer

          attr_reader updated_at: Integer?

          def updated_at=: (Integer) -> Integer

          attr_reader vehicle_id: String?

          def vehicle_id=: (String) -> String

          def initialize: (
            ?id: String,
            ?created_at: Integer,
            ?distance: Integer,
            ?document_snapshot: ::Array[top],
            ?driver: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data::Driver,
            ?ro_request_id: String,
            ?routing: Nextbillionai::Fleetify::RoutingResponse,
            ?short_id: String,
            ?steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsResponse],
            ?total_steps: Integer,
            ?updated_at: Integer,
            ?vehicle_id: String
          ) -> void

          def to_hash: -> {
            id: String,
            created_at: Integer,
            distance: Integer,
            document_snapshot: ::Array[top],
            driver: Nextbillionai::Models::Fleetify::RouteCreateResponse::Data::Driver,
            ro_request_id: String,
            routing: Nextbillionai::Fleetify::RoutingResponse,
            short_id: String,
            steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsResponse],
            total_steps: Integer,
            updated_at: Integer,
            vehicle_id: String
          }

          type driver = { id: String, email: String, fullname: String }

          class Driver < Nextbillionai::Internal::Type::BaseModel
            attr_reader id: String?

            def id=: (String) -> String

            attr_reader email: String?

            def email=: (String) -> String

            attr_reader fullname: String?

            def fullname=: (String) -> String

            def initialize: (
              ?id: String,
              ?email: String,
              ?fullname: String
            ) -> void

            def to_hash: -> { id: String, email: String, fullname: String }
          end
        end
      end
    end
  end
end
