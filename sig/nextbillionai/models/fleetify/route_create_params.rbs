module Nextbillionai
  module Models
    module Fleetify
      type route_create_params =
        {
          key: String,
          driver_email: String,
          steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsRequest],
          distance: Integer,
          document_template_id: String,
          ro_request_id: String,
          routing: Nextbillionai::Fleetify::RouteCreateParams::Routing
        }
        & Nextbillionai::Internal::Type::request_parameters

      class RouteCreateParams < Nextbillionai::Internal::Type::BaseModel
        extend Nextbillionai::Internal::Type::RequestParameters::Converter
        include Nextbillionai::Internal::Type::RequestParameters

        attr_accessor key: String

        attr_accessor driver_email: String

        attr_accessor steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsRequest]

        attr_reader distance: Integer?

        def distance=: (Integer) -> Integer

        attr_reader document_template_id: String?

        def document_template_id=: (String) -> String

        attr_reader ro_request_id: String?

        def ro_request_id=: (String) -> String

        attr_reader routing: Nextbillionai::Fleetify::RouteCreateParams::Routing?

        def routing=: (
          Nextbillionai::Fleetify::RouteCreateParams::Routing
        ) -> Nextbillionai::Fleetify::RouteCreateParams::Routing

        def initialize: (
          key: String,
          driver_email: String,
          steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsRequest],
          ?distance: Integer,
          ?document_template_id: String,
          ?ro_request_id: String,
          ?routing: Nextbillionai::Fleetify::RouteCreateParams::Routing,
          ?request_options: Nextbillionai::request_opts
        ) -> void

        def to_hash: -> {
          key: String,
          driver_email: String,
          steps: ::Array[Nextbillionai::Fleetify::Routes::RouteStepsRequest],
          distance: Integer,
          document_template_id: String,
          ro_request_id: String,
          routing: Nextbillionai::Fleetify::RouteCreateParams::Routing,
          request_options: Nextbillionai::RequestOptions
        }

        type routing =
          {
            approaches: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches,
            avoid: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid,
            hazmat_type: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type,
            mode: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode,
            truck_axle_load: Integer,
            truck_size: String,
            truck_weight: Integer
          }

        class Routing < Nextbillionai::Internal::Type::BaseModel
          attr_reader approaches: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches?

          def approaches=: (
            Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches
          ) -> Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches

          attr_reader avoid: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid?

          def avoid=: (
            Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid
          ) -> Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid

          attr_reader hazmat_type: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type?

          def hazmat_type=: (
            Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type
          ) -> Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type

          attr_reader mode: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode?

          def mode=: (
            Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode
          ) -> Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode

          attr_reader truck_axle_load: Integer?

          def truck_axle_load=: (Integer) -> Integer

          attr_reader truck_size: String?

          def truck_size=: (String) -> String

          attr_reader truck_weight: Integer?

          def truck_weight=: (Integer) -> Integer

          def initialize: (
            ?approaches: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches,
            ?avoid: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid,
            ?hazmat_type: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type,
            ?mode: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode,
            ?truck_axle_load: Integer,
            ?truck_size: String,
            ?truck_weight: Integer
          ) -> void

          def to_hash: -> {
            approaches: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches,
            avoid: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid,
            hazmat_type: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type,
            mode: Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode,
            truck_axle_load: Integer,
            truck_size: String,
            truck_weight: Integer
          }

          type approaches = :unrestricted | :curb

          module Approaches
            extend Nextbillionai::Internal::Type::Enum

            UNRESTRICTED: :unrestricted
            CURB: :curb

            def self?.values: -> ::Array[Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::approaches]
          end

          type avoid =
            :toll
            | :highway
            | :ferry
            | :sharp_turn
            | :uturn
            | :left_turn
            | :right_turn
            | :service_road
            | :none

          module Avoid
            extend Nextbillionai::Internal::Type::Enum

            TOLL: :toll
            HIGHWAY: :highway
            FERRY: :ferry
            SHARP_TURN: :sharp_turn
            UTURN: :uturn
            LEFT_TURN: :left_turn
            RIGHT_TURN: :right_turn
            SERVICE_ROAD: :service_road
            NONE: :none

            def self?.values: -> ::Array[Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::avoid]
          end

          type hazmat_type =
            :general | :circumstantial | :explosive | :harmful_to_water

          module HazmatType
            extend Nextbillionai::Internal::Type::Enum

            GENERAL: :general
            CIRCUMSTANTIAL: :circumstantial
            EXPLOSIVE: :explosive
            HARMFUL_TO_WATER: :harmful_to_water

            def self?.values: -> ::Array[Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::hazmat_type]
          end

          type mode = :car

          module Mode
            extend Nextbillionai::Internal::Type::Enum

            CAR: :car

            def self?.values: -> ::Array[Nextbillionai::Models::Fleetify::RouteCreateParams::Routing::mode]
          end
        end
      end
    end
  end
end
