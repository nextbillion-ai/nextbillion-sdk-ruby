module Nextbillionai
  module Resources
    class Restrictions
      def create: (
        Nextbillionai::Models::RestrictionCreateParams::restriction_type restriction_type,
        key: String,
        area: String,
        name: String,
        ?latlon: bool,
        ?comment: String,
        ?direction: Nextbillionai::Models::RichGroupRequest::direction,
        ?end_time: Float,
        ?geofence: ::Array[::Array[Float]],
        ?height: Integer,
        ?length: Integer,
        ?mode: ::Array[Nextbillionai::Models::RichGroupRequest::mode],
        ?repeat_on: String,
        ?segments: ::Array[Nextbillionai::RichGroupRequest::Segment],
        ?speed: Float,
        ?speed_limit: Float,
        ?start_time: Float,
        ?tracks: ::Array[::Array[Float]],
        ?turns: ::Array[Nextbillionai::RichGroupRequest::Turn],
        ?weight: Integer,
        ?width: Integer,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::RichGroupResponse

      def retrieve: (
        Integer id,
        key: String,
        ?transform: bool,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::RichGroupResponse

      def update: (
        Integer id,
        key: String,
        area: String,
        name: String,
        ?latlon: bool,
        ?comment: String,
        ?direction: Nextbillionai::Models::RichGroupRequest::direction,
        ?end_time: Float,
        ?geofence: ::Array[::Array[Float]],
        ?height: Integer,
        ?length: Integer,
        ?mode: ::Array[Nextbillionai::Models::RichGroupRequest::mode],
        ?repeat_on: String,
        ?segments: ::Array[Nextbillionai::RichGroupRequest::Segment],
        ?speed: Float,
        ?speed_limit: Float,
        ?start_time: Float,
        ?tracks: ::Array[::Array[Float]],
        ?turns: ::Array[Nextbillionai::RichGroupRequest::Turn],
        ?weight: Integer,
        ?width: Integer,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::RichGroupResponse

      def list: (
        area: String,
        key: String,
        limit: Integer,
        offset: Integer,
        ?mode: Nextbillionai::Models::RestrictionListParams::mode,
        ?name: String,
        ?restriction_type: Nextbillionai::Models::RestrictionListParams::restriction_type,
        ?source: Nextbillionai::Models::RestrictionListParams::source,
        ?state: Nextbillionai::Models::RestrictionListParams::state,
        ?status: Nextbillionai::Models::RestrictionListParams::status,
        ?transform: bool,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::Models::RestrictionListResponse

      def delete: (
        Integer id,
        key: String,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::Models::RestrictionDeleteResponse

      def list_by_bbox: (
        key: String,
        max_lat: Float,
        max_lon: Float,
        min_lat: Float,
        min_lon: Float,
        ?mode: ::Array[Nextbillionai::Models::RestrictionListByBboxParams::mode],
        ?restriction_type: Nextbillionai::Models::RestrictionListByBboxParams::restriction_type,
        ?source: Nextbillionai::Models::RestrictionListByBboxParams::source,
        ?state: Nextbillionai::Models::RestrictionListByBboxParams::state,
        ?status: Nextbillionai::Models::RestrictionListByBboxParams::status,
        ?transform: bool,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::Models::restriction_list_by_bbox_response

      def set_state: (
        Integer id,
        key: String,
        state: Nextbillionai::Models::RestrictionSetStateParams::state,
        ?request_options: Nextbillionai::request_opts
      ) -> Nextbillionai::RichGroupResponse

      def initialize: (client: Nextbillionai::Client) -> void
    end
  end
end
